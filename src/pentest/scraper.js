const axios = require('axios');
const cheerio = require('cheerio');
const urlModule = require('url');

async function scrapeWebsite(url) {
    try {
        const { data } = await axios.get(url);
        const $ = cheerio.load(data);
        
        // Extract the title
        const title = $('title').text();

        // Extract images
        const images = [];
        $('img').each((index, element) => {
            let src = $(element).attr('src');
            if (src) {
                src = urlModule.resolve(url, src);
                images.push(src);
            }
        });

        // Extract videos
        const videos = [];
        $('video').each((index, element) => {
            let src = $(element).attr('src');
            if (src) {
                src = urlModule.resolve(url, src);
                videos.push(src);
            }
        });

        // Extract audios
        const audios = [];
        $('audio').each((index, element) => {
            let src = $(element).attr('src');
            if (src) {
                src = urlModule.resolve(url, src);
                audios.push(src);
            }
        });

        // Extract text content
        const text = $('body').text().trim();

        // Extract internal page links
        const pages = [];
        $('a').each((index, element) => {
            const href = $(element).attr('href');
            if (href && !href.startsWith('http')) {
                const absoluteUrl = urlModule.resolve(url, href);
                pages.push(absoluteUrl);
            } else if (href && href.startsWith(url)) {
                pages.push(href);
            }
        });

        // Extract downloadable files (e.g., PDF, DOCX)
        const downloadables = [];
        $('a').each((index, element) => {
            const href = $(element).attr('href');
            if (href && /\.(pdf|docx|zip|rar|exe|tar|gz|7z)$/.test(href)) {
                const absoluteUrl = urlModule.resolve(url, href);
                downloadables.push(absoluteUrl);
            }
        });

        return {
            title,
            images,
            videos,
            audios,
            text,
            pages,
            downloadables
        };
    } catch (error) {
        console.error('Error scraping website:', error.message);
        return { error: error.message };
    }
}

module.exports = scrapeWebsite;
