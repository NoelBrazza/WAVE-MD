const dns = require('dns2');
const fs = require('fs');
const path = require('path');
const { performance } = require('perf_hooks');

// Set the path to your subdomains.txt file
const subdomainsFilePath = path.resolve(__dirname, 'subdomains.txt');

// Create a resolver instance with custom DNS servers
const resolver = new dns({ 
  retries: 2,
  timeout: 5000,
  servers: ['8.8.8.8'] // Google's DNS server
});

async function checkSubdomain(domain, subdomain) {
  const fullDomain = `${subdomain}.${domain}`;
  try {
    const result = await resolver.resolveA(fullDomain);
    const addresses = result.answers.map(answer => answer.address);
    return { subdomain: fullDomain, addresses };
  } catch (err) {
    return null;
  }
}

async function discoverSubdomains(domain) {
  const subdomains = fs.readFileSync(subdomainsFilePath, 'utf-8').split('\n').map(sd => sd.trim()).filter(Boolean);
  const results = [];
  const startTime = performance.now();

  const subdomainPromises = subdomains.map(subdomain => checkSubdomain(domain, subdomain));
  const resolvedSubdomains = await Promise.all(subdomainPromises);

  for (const result of resolvedSubdomains) {
    if (result) {
      results.push(result);
    }
  }

  const endTime = performance.now();
  console.log(`Subdomain discovery completed in ${(endTime - startTime) / 1000} seconds`);

  return results;
}

module.exports = discoverSubdomains;
